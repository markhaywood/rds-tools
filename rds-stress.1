.Dd May 15, 2007
.Dt RDS-STRESS 1
.Os
.Sh NAME
.Nm rds-stress
.Nd send messages between processes over RDS sockets
.Pp
.Sh SYNOPSIS
.Nm rds-stress
.Bk -words
.Op Ar OPTIONS
.Sh DESCRIPTION
.Nm rds-stress
sends messages between groups tasks, usually running on seperate
machines.
.Pp
First a passive receiving instance is started.
.Pp
.Dl $ rds-stress
.Pp
Then an active sending instance is started, giving it
the address and port at which it will find a listening
passive receiver.  In addition, it is given configuration options which
both instances will use.
.Pp
.Dl $ rds-stress -s recvhost -p 4000 -t 1 -d 1
.Pp
The active sender will parse the options, connect to the passive receiver, and
send the options over this connection.  From this point on both instances
exhibit the exact same behaviour.
.Pp
They will create a number of child tasks as specified by the -t option.  Once
the children are created the parent sleeps for a second at a time, printing a
summary of statistics at each interval. 
.Pp
Each child will open an RDS socket, each binding to a port number in order
after the port number given on the command line.  The first child would bind to
port 4001 in our example.  Each child sets the send and receive buffers to
exactly fit the number of messages, requests and acks, that will be in flight
as determind by the command line arguments.
.Pp
The children then enter their loop.  They will keep a number of sent messages
outstanding as specified by the -d option.  When they reach this limit they
will wait to receive acks which will allow them to send again.  As they receive
messages from their peers they immediately send acks.
.Pp
Every second, the parent process will display statistics of the ongoing
stress test. The output is described in section OUTPUT below.
.Pp
If the -T option is given, the test will terminate after the specified time,
and a summary is printed.
.Pp
Each child maintains outstanding messages to all other children of the other instance.
They do not send to their siblings.
.Sh OPTIONS
.Ss Passive Receiver and Active Sender Configuration Options
The following options are available for use on either the passive receiver or
active sender command lines, but are not shared between the two:
.Bl -tag -width Ds
.It Fl p, -port Ar port_number
Each parent binds a TCP socket to this port number and their respective
address.  They will trade the negotiated options over this socket.  Each
child will bind an RDS socket to the range of ports immediately following
this port number, for as many children as there are. The default port
number value is 4000.
.It Fl r, -recv-addr Ar receive_address
This specifies the address that messages will be sent from.  If -s is not
specified then rds-stress waits for a connection on this address before
proceeding.
.Pp
If this option is not given, rds-stress will choose an appropriate address.
The passive process will accept connections on all local interfaces, and
obtain the address once the control connection is established.
The active process will choose a local address based on the interface through.
.It Fl -show-histogram
Prints a round-trip time (RTT) histogram.
.It Fl -show-outliers Ar rtt-time
Reports on any RTT exceeding the rtt-time. The default is that there is no
outlier checking.
.It Fl -cancel-sent-to
If used, children processes will issue a "RDS_CANCEL_SENT_TO"
for each task and report how long that operation took
together with the destination IP-address and port plus
the process-id of that child process.
Since signal SIGINT is ignored by the children processes,
a user can press Ctrl-C interactively to terminate
the parent process early and observe the amount of time it
took to complete "RDS_CANCEL_SENT_TO" in the midst of send
operations.
.It Fl -abort-after Ar seconds
If used, the parent process will arm a timer (alarm(seconds))
to terminate in the midst of operation.
This is useful in combination with the "--cancel-sent-to"
option in order to measure the amount of time spent
in "RDS_CANCEL_SENT_TO" while send operations are ongoing.
.It Fl -disable-inq
If used, each task will not set RDS-INQ socket option to receive the number
of backlog bytes pending to be read from the receive queue. Since application
is now not aware of pending bytes in the receive queue, the number of recvmsg()
syscalls can be higher leading to higher system load and lower cpu yield.
.El
.Ss Active Sender Configuration Options
The following options are available for use on the active sender command line,
but are shared with the passive receiver instance prior to the test starting.
.Bl -tag -width Ds
.It Fl s, -send-addr Ar send_address
A connection attempt is made to this address.  Once its complete and the
options are sent over it then children will be created and work will proceed.
.Pp
If this option is not given, rds-stress will choose an appropriate address.
The passive process will accept connections on all local interfaces, and
obtain the address once the control connection is established.
The active process will choose a local address based on the interface through
which it connects to the destination address.
.It Fl a, -ack-bytes Ar ack_bytes
This specifies the size of the ack messages, in bytes. There is a minimum size
which depends on the format of the ack messages, which may change over time.
See section "Message Sizes" below.
.It Fl q, -req-bytes Ar request_bytes
This specifies the size of the request messages, in bytes.
It also has a minimum size which may change over time.
See section "Message Sizes" below.
.It Fl o, -one-way
Datagrams will be sent one way only. The default is that they are sent
both ways.
.It Fl d, -depth Ar queue_depth
Each child will try to maintain this many sent messages outstanding to each
of its peers on the remote address. The default depth is 1.
.It Fl t, -tasks Ar nr_tasks
Each parent will create this many children tasks. The default number of tasks is 1.
.It Fl T, -time Ar seconds
Specify the duration of the test run. After the specified number of seconds,
all processes on both ends of the connection will terminate, and the
active instance will print a summary. By default, rds-stress will keep
on sending and receiving messages.
.It Fl Q, -tos Ar tos
Type of Service. The default is 0.
.It Fl -connect-retries Ar retries
This can be used to specify the number of times an active sender instance should
retry on a failed connect. The default is 0, meaning no reties if the connect fails.
.It Fl -use-cong-monitor Ar enable
Enable/disable congestion monitoring. The default is 1, meaning enabled.
.It Fl v, -verify
With this option enabled, packets are filled with a pattern that is
verified by the receiver. This check can help detect data corruption
occuring under high load.
.It Fl c, -report-cpu
This causes rds-stress to create child tasks which just consume CPU cycles.
One task is created for each CPU in the system.  First each child observes the
maximum rate at which it can consume cycles.  This means that this option
should only be given on an idle system.  rds-stress can then calculate the CPU
use of the system by observing the lesser rate at which the children consume
cycles.  This option is *not* shared between the active sender and passive receiver
instances. It must be specified on each rds-stress command line.
.It Fl z, -report-summary
This flag can be used in conjunction with -T. It suppresses the ongoing
display of statistics, and prints a summary only.
.It Fl R, -rtprio
This tells the rds-stress parent process to run with SCHED_RR priority,
giving it precedence over the child processes. This is useful when running
with lots of tasks, where there is a risk of the child processes starving
the parent, and skewing the results.
.It Fl V, -trace
Trace execution.
.It Fl -show-params
Print job parameters/options.
.It Fl -show-perfdata
Generate perf data output for script parsing.
.It Fl --reset
Reset the connection and exit.
.It Fl --async
Enable async sends.
.It Fl -always-bursty
Always flip-flop between send-only, then receive-only mode.
This is to avoid the slower-is-faster paradox, which happens when the cost
of a sendmsg becomes higher than the cost of a recvmsg making rds-stress transition
from a bursty test-mode to a streaming test-mode.
.El
.Ss RDMA specific Options:
.Bl -tag -width Ds
.It Fl D, -rdma-bytes Ar rdma_bytes
RDSv3 is capable of transmitting part of a message via RDMA directly from
application buffer to application buffer. This option enables RDMA support
in rds-stress: request packets include parameters for an RDMA READ or WRITE
operation, which the receiving process executes at the time the ACK packet
is sent.
See section "Message Sizes" below.
.It Fl I, -rdma-buffers Ar iovecs
Number of user buffers to target. The max supported is 512. The default is 1.
.It Fl M, -rdma-mode Ar nr
Mode (0=readwrite,1=readonly,2=writeonly). The default is 0.
.It Fl -rdma-use-once Ar enable
Enable/disable RDMA use_once buffers. The default is 0, meaning disabled.
.It Fl -rdma-use-get-mr Ar use-get_mr
Use GET_MR to get RDMA cookie or use new RDMA_MAP control message which
is more efficient and eliminates a system call. The default is 0, meaning disabled.
.It Fl -rdma-use-fence Ar enable
Enable/disable RDMA read fencing. The default is 1, meaning enabled.
.It Fl -rdma-use-notify Ar enable
Option is now obsolete as RDMA notifications are always enabled.
.It Fl -rdma-cache-mrs Ar enable
Enable/disable reuse of MR handle for all RDMA operations. The default 0, meaning disabled.
.It Fl -rdma-alignment Ar alignment
Request a buffer alignment to test unaligned RDMA. The default is 0, meaning disabled.
.It Fl -rdma-key-o-meter
Used to track whether RDS zerocopy code issues repeating R_Keys.
.El
.Pp
.Ss Message Sizes
Options which set a message size (such as -a) specify a number of bytes
by default. By appending \fBK\fP, \fBM\fP, or \fBG\fP, you can specify the size
in kilobytes, megabytes or gigabytes, respectively. For instance,
the following will run rds-stress with a message and ACK size of 1024
bytes, and an RDMA message size of 1048576 bytes:
.Pp
.Dl rds-stress ... -q 1K -a 1K -D 1M
.Pp
.Pp
.Sh OUTPUT
Each parent outputs columns of statistics at a regular interval:
.Bl -tag -width Ds
.It tsks
The number of child tasks which are running.
.It tx/s
The number of sendmsg() calls that all children are executing, per second. 
.It tx+rx K/s
The total number of bytes that are flowing through sendmsg() and recvmsg() for all children.
This includes both request and ack messages.
.It rw+rr K/s
The total number of bytes that are being transferred via RDMA READs and
WRITEs for all children.
.It tx us/c
The average number of microseconds spent in sendmsg() calls.
.It rtt us
The average round trip time for a request and ack message pair.  This measures
the total time between when a task sends a request and when it finally receives
the ack for that message.  Because it includes the time it takes for the
receiver to wake up, receive the message, and send an ack, it can grow to be
quite large under load. 
.It cpu %
This is the percentage of available CPU resources on this machine that are being
consumed since rds-stress started running.  It will show -1.00 if -c is not
given.  It is calculated based on the amount of CPU resources that CPU soaking
tasks are able to consume.  This lets it measure CPU use by the system, say in
interrupt handlers, that task-based CPU accounting does not include.
For this to work rds-stress must be started with -c on an idle system.
.El
